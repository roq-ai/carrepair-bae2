generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model appointment {
  id                                     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date_time                              DateTime @db.Timestamp(6)
  customer_id                            String   @db.Uuid
  service_id                             String   @db.Uuid
  receptionist_id                        String   @db.Uuid
  created_at                             DateTime @default(now()) @db.Timestamp(6)
  updated_at                             DateTime @default(now()) @db.Timestamp(6)
  user_appointment_customer_idTouser     user     @relation("appointment_customer_idTouser", fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_appointment_receptionist_idTouser user     @relation("appointment_receptionist_idTouser", fields: [receptionist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service                                service  @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  task                                   task[]
}

model garage {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  service     service[]
}

model service {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String        @db.VarChar(255)
  garage_id   String        @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  appointment appointment[]
  garage      garage        @relation(fields: [garage_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model task {
  id             String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status         String      @db.VarChar(255)
  mechanic_id    String      @db.Uuid
  appointment_id String      @db.Uuid
  created_at     DateTime    @default(now()) @db.Timestamp(6)
  updated_at     DateTime    @default(now()) @db.Timestamp(6)
  appointment    appointment @relation(fields: [appointment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user        @relation(fields: [mechanic_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                            String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                         String        @unique @db.VarChar(255)
  firstName                                     String?       @db.VarChar(255)
  lastName                                      String?       @db.VarChar(255)
  roq_user_id                                   String        @db.VarChar(255)
  tenant_id                                     String        @db.VarChar(255)
  created_at                                    DateTime      @default(now()) @db.Timestamp(6)
  updated_at                                    DateTime      @default(now()) @db.Timestamp(6)
  appointment_appointment_customer_idTouser     appointment[] @relation("appointment_customer_idTouser")
  appointment_appointment_receptionist_idTouser appointment[] @relation("appointment_receptionist_idTouser")
  garage                                        garage[]
  task                                          task[]
}
